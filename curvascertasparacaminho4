#!/usr/bin/env python3
from ev3dev.ev3 import *
from time import sleep


class Robozin(object):

    def __init__(self):

        # analogicos
        # motors
        self.motor_D, self.motor_E = LargeMotor("outB"), LargeMotor("outA")

        # Sensors

        self.infraESQ, self.colorESQ, self.colorDIR, self.infraDIR = InfraredSensor("in1"), ColorSensor(
            "in3"), ColorSensor("in2"), InfraredSensor("in4")

        # mode

        self.infraESQ.mode, self.colorESQ.mode, self.colorDIR.mode, self.infraDIR.mode = "IR-PROX", "COL-COLOR", "COL-COLOR", "IR-PROX"

        # Globais

        self.caminho = {}

        self.curva, self.voltando, self.verdeB = False, False, False  # False Booleans

        self.velocidadeE, self.velocidadeD = 300, 300  # Velocidades

        self.angulo_in, self.variacao, self.erro_ang = self.infraESQ.value(), 100, 0  # Angulos

        self.verm, self.verd, self.azul = 0, 0, 0

        self.coratual = 10

        # self.main()

    def andar(self):
        if self.infraESQ.value() >= 18 and self.infraDIR.value() <= 16:
            print("1")
            self.velocidadeE = 380
            self.velocidadeD = 260

        elif self.infraESQ.value() >= 16 and self.infraDIR.value() <= 18:
            print("2")
            self.velocidadeD = 380
            self.velocidadeE = 260

        else:
            print("3")
            self.velocidadeD = 300
            self.velocidadeE = 300

        self.motor_D.run_forever(speed_sp=self.velocidadeD)
        self.motor_E.run_forever(speed_sp=self.velocidadeE)

    def curvaD(self):
        self.motor_E.run_to_rel_pos(position_sp=95, speed_sp=self.velocidadeE)
        self.motor_D.run_to_rel_pos(position_sp=95, speed_sp=self.velocidadeE)
        self.motor_D.wait_while("running")
        self.motor_E.wait_while("running")
        self.motor_E.run_to_rel_pos(position_sp=1900, speed_sp=self.velocidadeE)
        self.motor_D.run_to_rel_pos(position_sp=350, speed_sp=50)
        self.motor_D.wait_while("running")
        self.motor_E.wait_while("running")

    def curvaE(self):
        self.motor_E.run_to_rel_pos(position_sp=105, speed_sp=self.velocidadeE)
        self.motor_D.run_to_rel_pos(position_sp=105, speed_sp=self.velocidadeE)
        self.motor_D.wait_while("running")
        self.motor_E.wait_while("running")
        self.motor_D.run_to_rel_pos(position_sp=1800, speed_sp=self.velocidadeE)
        self.motor_E.run_to_rel_pos(position_sp=370, speed_sp=70)
        self.motor_D.wait_while("running")
        self.motor_E.wait_while("running")
    '''
        while self.colorDIR.value() != 6 and self.colorESQ.value() != 6:
            self.motor_E.run_forever(speed_sp=self.velocidadeE)
            self.motor_D.run_forever(speed_sp=self.velocidadeD)
            '''

    def meiavolta(self):
        self.motor_E.stop()
        self.motor_D.stop()
        self.motor_D.run_to_rel_pos(position_sp=1380, speed_sp=300)
        self.motor_E.run_to_rel_pos(position_sp=-1380, speed_sp=300)
        self.motor_D.wait_while("running")
        self.motor_E.wait_while("running")

    def main(self):
        while True :
            self.andar()
            if self.colorESQ.value() == 3 and self.colorDIR.value() == 3 :
                self.curvaD()


Robozin().main()
# Robozin().andacarai()
# colors = ["nda","preto","azul","verde","amarelo","vermelho","branco","marrom"]
